# Linux

## General

https://linux-audit.com/security-program-implementing-linux-security/

## Systemd

{lang="bash"}
    systemd-analyze security

Systemd also has a container system for the running services

## Malware

Rootkits: https://linux-audit.com/intrusion-detection-linux-rootkits/
https://linux-audit.com/dealing-with-linux-malware-insights-by-the-author-of-rkhunter/

## EBPF

Kernel hacking with EBPF https://www.graplsecurity.com/post/kernel-pwning-with-ebpf-a-love-story

%% EBPF Fuzzer: https://github.com/snorez/ebpf-fuzzer

%% EBPf tools https://github.com/richinseattle/ebpf-tools

%% BPF core https://nakryiko.com/posts/bpf-core-reference-guide/

%% https://networkop.co.uk/post/2021-03-ebpf-intro/

## Sysmon

%% https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/mitre-att-amp-ck-technique-coverage-with-sysmon-for-linux/ba-p/2858219

%% https://github.com/Sysinternals/SysmonForLinux

%% https://github.com/microsoft/MSTIC-Sysmon/tree/main/linux/configs

%% https://medium.com/@olafhartong/sysmon-for-linux-57de7ca48575

%% https://github.com/olafhartong/sysmon-cheatsheet

## Lynis

https://linux-audit.com/unix-security-audit-perform-an-audit-in-3-minutes/

https://linux-audit.com/how-to-create-custom-tests-in-lynis/

https://cisofy.com/lynis/

%% https://linux-audit.com/lynis-3-major-release/

## Updates and upgrades

https://linux-audit.com/upgrading-external-packages-with-unattended-upgrade/

https://linux-audit.com/missing-packages-do-not-trust-external-repositories/

## Hardening

%% https://linux-audit.com/why-linux-security-hardening-scripts-might-backfire/

Hiding processes: https://linux-audit.com/linux-system-hardening-adding-hidepid-to-proc/

Capablities: https://linux-audit.com/linux-capabilities-101/

Finding SETUID binaries: https://linux-audit.com/finding-setuid-binaries-on-linux-and-bsd/

Kernel: https://linux-audit.com/linux-kernel-security-and-how-to-improve-it/

Server hardening: https://linux-audit.com/linux-server-hardening-most-important-steps-to-secure-systems/

Ptrace protection: https://linux-audit.com/protect-ptrace-processes-kernel-yama-ptrace_scope/

https://github.com/roxyd/roxyd.github.io/blob/master/talks/linux_strengthening.pdf

Sysctl: https://linux-audit.com/linux-hardening-with-sysctl/

File integrity: https://linux-audit.com/linux-system-integrity-explained-ensure-data-logging-and-kernel-integrity/

File access: https://linux-audit.com/monitoring-linux-file-access-changes-and-modifications/

Step-by-step hardening: https://linux-audit.com/linux-server-hardening-most-important-steps-to-secure-systems/

Hosts file: https://linux-audit.com/is-your-etc-hosts-file-healthy/

Kernel modules: https://linux-audit.com/increase-kernel-integrity-with-disabled-linux-kernel-modules-loading/

Otseca: https://linuxsecurity.expert/tools/otseca/

ACLs: https://linux-audit.com/using-file-acls-linux-additional-security/

https://linux-audit.com/determine-processes-which-need-a-restart-with-checkrestart-needrestart/

https://linux-audit.com/using-xattrs-extended-attributes-on-linux/

https://linux-audit.com/security-integration-configuration-management-and-auditing/

https://linux-audit.com/linux-audit-framework-101-basic-rules-for-configuration/

IPv6: https://linux-audit.com/linux-security-guide-for-hardening-ipv6/

https://linux-audit.com/linux-aslr-and-kernelrandomize_va_space-setting/

https://linux-audit.com/kernel-hardening-disable-and-blacklist-linux-modules/

https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/

https://linux-audit.com/determine-file-and-related-package/

https://linux-audit.com/simplifying-security-choose-the-right-toolkit-not-tool/

https://linux-audit.com/5-tips-to-protect-the-root-account/

https://linux-audit.com/how-and-why-linux-daemons-drop-privileges/

https://linux-audit.com/audit-ssh-configurations-hashknownhosts-option/

https://linux-audit.com/find-disable-insecure-services-linux/

https://linux-audit.com/protect-linux-systems-against-sslv3-poodle-vulnerability/

https://linux-audit.com/linux-audit-framework-using-aureport/

## System analysis

### strace

trace process events on system level

Strace: https://linux-audit.com/the-ultimate-strace-cheat-sheet/

Important parameters are:

* -f follow forks
* -e event filter
* -p pid

You can find a list of syscalls in *man 2 syscalls*

Of course there are libraries to write own tracers:

* [Rust](https://github.com/blaind/hstrace)
* [Python](https://python-ptrace.readthedocs.io/en/latest/)

https://linux-audit.com/the-ultimate-strace-cheat-sheet/

### ltrace

trace process events on library level. Less abstract than strace. But needs a dynamically linked library.

Important parameters are:

* -f follow forks
* -e event filter
* -p pid
* -C make C++ functions more readable (demangled)


### lsof

Everything is a file on Unix. This lists open files.

* Open files (-c matching process names)
* Network traffic (-i4 and -i6 matching network addresses)
* NFS (-N)

### systemtap

A system wide tool to gather tracing and profiling data. A script is compiled into a kernel module which monitors the system.

%% https://learning.oreilly.com/library/view/embedded-linux-development/9781788399210/15c3eac3-2273-4cbf-b9d2-801b0998a8d1.xhtml

### Audit

Add events to audit with *auditctl* and search in the resulting logs with *ausearch*

## Password

https://linux-audit.com/password-security-with-linux-etc-shadow-file/


## Apparmor

https://linux-audit.com/introduction-into-linux-security-modules/

## Bubblewrap

## Firewall and networking

IP blocking: https://linux-audit.com/blocking-ip-addresses-in-linux-with-iptables/

netstat ++ https://linux-audit.com/alternative-netstat-ss-tool/

HTTP Evader: Firewall evasion testing: https://noxxi.de/research/http-evader.html

## NTP

https://linux-audit.com/tlsdate-the-secure-alternative-for-ntpd-ntpdate-and-rdate/

https://www.theregister.co.uk/2018/07/02/ntp_revision_to_end_timing_attacks/

## Shell scripts

https://linuxsecurity.expert/tools/shellharden/

## Auditing

https://linux-audit.com/tuning-auditd-high-performance-linux-auditing/
https://github.com/bfuzzy/auditd-attack



Monitor file access: https://linux-audit.com/monitor-file-access-by-linux-processes/

## Post compromise

https://linux-audit.com/dealing-with-a-compromised-linux-system/

## Core dumps

https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/
https://github.com/Microsoft/ProcDump-for-Linux

## Processes

https://linux-audit.com/auditing-linux-processes/

## Mirai on Linux server

https://www.darkreading.com/attacks-breaches/mirai-evolves-from-iot-devices-to-linux-servers/d/d-id/1333329?_mc=rss_x_drr_edt_aud_dr_x_x-rss-simple


## Initcalls

https://www.collabora.com/news-and-blog/blog/2020/07/14/introduction-to-linux-kernel-initcalls/
https://www.collabora.com/news-and-blog/blog/2020/09/25/initcalls-part-2-digging-into-implementation/

## Debian packages


Find debian package for file:

{lang="bash"}
    $ sudo apt install apt-file
    $ apt-file update
    $ apt-file find -F /usr/bin/gcc-9
    gcc-9: /usr/bin/gcc-9

Check if file was modified

{lang="bash"}
    $ sudo apt-get install debsums
    $ debsums -a gcc-9
    /usr/bin/x86_64-linux-gnu-gcc-9                                               OK
    /usr/bin/x86_64-linux-gnu-gcc-ar-9                                            OK
    /usr/bin/x86_64-linux-gnu-gcc-nm-9                                            OK
    /usr/bin/x86_64-linux-gnu-gcc-ranlib-9                                        OK
    /usr/bin/x86_64-linux-gnu-gcov-9                                              OK

Important: It is just verifying MD5. And MD5 is not secure anymore. You could use different tools like tripwire (https://www.redhat.com/sysadmin/security-monitoring-tripwire)

%% TODO: Linux hardening guide https://github.com/trimstray/the-practical-linux-hardening-guide


%% AVML (Aquire volatile memory for linux: https://github.com/microsoft/avml)

https://linux-audit.com/understanding-memory-information-on-linux-systems/


%% TODO: replacement for top command: "nmon"

%% ## Embedded Linux

%% https://learning.oreilly.com/library/view/embedded-linux-development/9781788399210/
%% https://www.thirtythreeforty.net/posts/2019/08/mastering-embedded-linux-part-1-concepts/
%% https://www.thirtythreeforty.net/posts/2019/12/mastering-embedded-linux-part-2-hardware/
%% https://www.thirtythreeforty.net/posts/2020/01/mastering-embedded-linux-part-3-buildroot/
%% https://www.thirtythreeforty.net/posts/2020/03/mastering-embedded-linux-part-4-adding-features/
%% https://www.thirtythreeforty.net/posts/2020/05/mastering-embedded-linux-part-5-platform-daemons/

%% Password quality enforcer: sudo apt install libpam-pwquality   Has lots of options

%% TODO: Linux Kernel Map https://makelinux.github.io/kernel/map/

%% Defense map https://github.com/a13xp0p0v/linux-kernel-defence-map

%% Kernel module programming guide: https://sysprog21.github.io/lkmpg/

%% Securing mount points https://linux-audit.com/securing-mount-points-on-linux/

%% syzkaller fuzzer: see fuzzing

%% https://linux-audit.com/running-processes-and-daemons-on-linux-systems/

% https://linux-audit.com/audit-installed-compilers-and-their-packages/

%% https://linux-audit.com/linux-server-security-three-steps-to-secure-each-system/

%% https://linux-audit.com/distributing-ssh-keys-using-ssh-copy-id-manually-automated/

%% https://github.com/trimstray/otseca

## Linux Kernel exploitation

https://0x434b.dev/dabbling-with-linux-kernel-exploitation-ctf-challenges-to-learn-the-ropes/

https://0x434b.dev/learning-linux-kernel-exploitation-part-2-cve-2022-0847/


## Server hardening

https://linux-audit.com/ubuntu-server-hardening-guide-quick-and-secure/
https://linux-audit.com/linux-server-hardening-most-important-steps-to-secure-systems/


## Container

https://linux-audit.com/docker-security-best-practices-for-your-vessel-and-containers/

https://linux-audit.com/docker-security-how-containers-not-help-you/

## vulnerability scanning

https://linux-audit.com/vulnerability-scanning-the-destiny-to-disappointment/

%% https://github.com/google/kmsan

%% https://www.redhat.com/sysadmin/mastering-systemd

%% https://decoded.avast.io/davidalvarez/linux-threat-hunting-syslogk-a-kernel-rootkit-found-under-development-in-the-wild/

%% Linux Kernel exploit https://www.graplsecurity.com/post/iou-ring-exploiting-the-linux-kernel

%% ELF experimental anti-tamper https://github.com/elfmaster/maya

%% Syzkaller in web : https://storage.googleapis.com/syzkaller/cover/ci-qemu-upstream.html

%% Kernel config hardening check https://github.com/a13xp0p0v/kconfig-hardened-check