# Web security


.. State: 10 % Web

## Web architecture

https://engineering.videoblocks.com/web-architecture-101-a3224e126947

## SRI



%% TODO: test it

Oneliner: curl -s [url]|sha256sum|xxd -r -p|base64

## Standard attacks on browsers

.. TODO: Write about it



## Standard attacks on web sites

%% TODO: Write about it

## Burp

%% TODO: Write about it

## Th3inspector

https://github.com/Moham3dRiahi/Th3inspector

%% TODO: Check it out

## Snallygaster

Scanning web sites for secret files

https://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html

* git
* dump.sql
* xaa
* private keys
* coredumps

%% Hanno: "Noticed some PHP behavior recently and had an idea: PHP will throw a warning if you try to use sessions and the session cookie has special chars in it. What does that mean? If the site is configured with display_errors=On and uses sessions you can force it to throw PHP warnings and show paths. Try something like "curl -s --cookie PHPSESSID=äöü [host]" and grep for "Warning"."

## CTFR


Use CT logs to get web site sub domains

https://github.com/UnaPibaGeek/ctfr

## Od1N


Automated attacks on web packages

https://github.com/CoolerVoid/0d1n

.. TODO: Test

## Malvertising

https://www.heise.de/security/meldung/Malvertising-Kriminelle-nutzen-Tausende-WordPress-Sites-als-Malware-Schleudern-4125985.html

## CORS

## Attack vector web catche

https://portswigger.net/blog/practical-web-cache-poisoning

## CSP

%% https://uselesscsp.com/

## Corb

## IFrame isolation

## Buy similar URLs

Buy similar urls. Also maintain your hold on the domains you own. Maybe even
past the time you use them - if you are running your mails over your domain
your customers may continue to use that - and by accident communicate with the
attacker who bought the domain after you quit.

* Typo squatting
* Certificates

%% TODO: Subdomain enumeration: https://github.com/cakinney/domained
%% http://michenriksen.com/blog/aquatone-tool-for-domain-flyovers/
%% https://github.com/michenriksen/aquatone/

%% ReDoS attacks: https://www.bleepingcomputer.com/news/security/javascript-web-apps-and-servers-vulnerable-to-redos-attacks/

%% Site security analysis: https://scotthelme.co.uk/sites-that-used-to-have-ev/

%% EKFiddler: Fiddler Web debugger: https://www.kitploit.com/2018/08/ekfiddle-framework-based-on-fiddler-web.html
%% And: https://github.com/malwareinfosec/EKFiddle

%% https://github.com/jseidl/GoldenEye

%% https://linux-audit.com/web-changes-with-http2-performance-and-security/


%% Why https: https://www.troyhunt.com/heres-why-your-static-website-needs-https/

%% TODO: File upload: https://github.com/almandin/fuxploider

%% Top 10 Web hacking 2017: https://portswigger.net/blog/top-10-web-hacking-techniques-of-2017

%% Web market shares 2018: https://sparktoro.com/blog/2018-search-market-share-myths-vs-realities-of-google-bing-amazon-facebook-duckduckgo-more/

%% https://portswigger.net/blog/bypassing-web-cache-poisoning-countermeasures

%% TODO: Server side Request Forgery:
%% https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-1-29d034c27978
%% https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-2-a085ec4332c0
%% https://medium.com/@madrobot/ssrf-server-side-request-forgery-types-and-ways-to-exploit-it-part-3-b0f5997e3739


%% TODO: Strict CSP: https://security.googleblog.com/2016/09/reshaping-web-defenses-with-strict.html

%% TODO: XSRFProbe https://www.kitploit.com/2019/01/xsrfprobe-prime-cross-site-request.html?utm_source=dlvr.it&utm_medium=twitter

%% TODO: Data correlation https://github.com/woj-ciech/Danger-zone

%% TODO: Mozilla Observatory https://observatory.mozilla.org/
