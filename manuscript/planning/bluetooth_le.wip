
### Gattack.io

GATT: The "application" layer. While the lower layers very often do not
do encryption (pre-shared keys would be possible, but default is more likely
"none" or something weak), GATT layer could have some DIY encryption.

For the other BTLE encryption methods:

* Unencrypted: Can be broken
* "Just works": The device talks to the MITM encrypted. The MITM to the central unencrypted....broken.
* "Passkey entry" BTLE specification: “Just Works and Passkey
Entry do not provide any passive eavesdropping protection”
* Sometimes the pairing has to be broken first (also for crackle to work)

Gattacker is a node.js based MITM tool for BTLE.

[Gattack](http://gattack.io/)

[Gattacker on Github](https://github.com/securing/gattacker)
[Presentation](https://github.com/securing/docs/raw/master/slides.pdf)

The Gattacker Whitepaper has  a good overview covering BTLE
technology and the possible attacks:
[Gattacker Whitepaper](https://github.com/securing/docs/raw/master/whitepaper.pdf)

Gattack offers those attacks:

* DOS the broadcasting phase (before pairing)
* Cloning and spoofing a device
* passive interception of unencrypted transmissions
* active interception (MITM)
* module interface - attack open GATT services
* password brute forcing
* GATT value fuzzing

%% TODO: Check in tool if those are there

%% Sniffer: https://github.com/mikeryan/ice9-bluetooth-sniffer





%% https://medium.com/@arunmag/how-i-reverse-engineered-and-exploited-a-smart-massager-ee7c9f21bf33
%% https://medium.com/@arunmag/my-journey-towards-reverse-engineering-a-smart-band-bluetooth-le-re-d1dea00e4de2
%% https://medium.com/@yogeshojha/i-hacked-xiaomi-miband-3-and-here-is-how-i-did-it-43d68c272391
%% https://www.getkisi.com/blog/smart-locks-hacked-bluetooth-ble








%% TODO: [Blackhat](https://media.blackhat.com/us-13/us-13-Ryan-Bluetooth-Smart-The-Good-The-Bad-The-Ugly-and-The-Fix.pdf)


%% TODO hcidump -x -t hci0

%% TODO: REFERENCE: #reference-presentation-btle-sniffing
