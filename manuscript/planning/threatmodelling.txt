# Threat Modelling {#chapter-threat-modelling}

Threat modeling is a way to get an honest overview of the security state of a project.
It should be done quite early (design phase) and continued during the
project - especially when requirements change..

There are several methods for threat modelling.

The big goal of all of then is to achieve better knowledge of all the bad
things that could happen.

To achieve the big goal there are lots of sub-goals you could want to achieve.
The priority of those depends on circumstances like the company goals,
the project state, ...

* System overview
* Systematic check for attack vectors
* Prioritizing of threats
* Guiding non-security people through the process
* Understanding attackers
* Security awareness training
* Documents the security state (and there are software tools for that !)
* Probabilities of the attack to happen

Probabilities of the attack to happen is a bit tricky. As compared to
safety analysis.

A> Ransomware was a factor for the rising bitcoin price. And the rising bitcoin
A> price dragged other crypto currencies up as well. A company created a simple
A> API to mine Monero crypto coins in a web page - as replacement for Ads. And
A> this got abused by crypto miner malware that emerged after the Ransomware.
A>
A> Who could have predicted this 2-3 years cycle ?

The method you pick depends on your exact sub-goals, the people
participating and your personality. Also on external circumstances like
"available time" and "available meeting space".

There is a cool list of [12 methodologies](https://insights.sei.cmu.edu/sei_blog/2018/12/threat-modeling-12-available-methods.html).
Please read that and other sources to find your set of methods.

Some of those methods I'll explain here. But:
I'll limit the list to special ones, but not necessarily the best:

* STRIDE
* Attack tree
* Persona non Grata (PnG)
* Security cards
* CVSS

Before I forget: You can combine them

## Security cards

Security cards are a brainstorming method where randomly drawn cards add an
element of randomness into the thought process. This is a good way to boost
creativity. But it will not guarantee full coverage.

[Download](http://securitycards.cs.washington.edu/index.html)

%% ## Microsoft SDL
%% [SDL](https://www.microsoft.com/en-us/sdl)

## STRIDE

The Microsoft checklist for Threat Modelling:

[STRIDE](https://msdn.microsoft.com/en-us/library/ee823878(v=cs.20).aspx)

%% TODO: Add details

## Attack tree

Attack trees are built by first defining *targets* an attacker can have
("Crash server") and then adding details. This is done by adding more and
more details with each step ("DDOS network", "DOS RAM", ...). More and more
deeper levels are added.

This create a collection of trees (one for each target).

There are software tools to manage that. It is a very methodical approach.

## Persona non Grata

Similar to the approach of personas for Agile development there is also an
approach to model different types of attackers. With their resources, goals,
interests and methods.

The system is then "attacked" using their point of view.

This one is leaning more to the creative side and I think teams used to Agile
user-personas will get used to this one quite fast.

## CVSS

This is not a brain storming method but a way to evaluate the impact of
already found issues.

It can be combined with any of the methods above.

And it shortens those endless discussions "Which one is more relevant".

Just check some boxes in the online calculator and you will receive a CVSS score.
Not perfect - but much better than the alternative.

[CVSS calculator](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator)

## Thorsten Style

I am more a person who loves to enable others. I observed myself to quite
often get into "coffee-machine chats" where I trigger the evil neurons of
people to make them think about the bad things that could happen to their
projects. A 1:1 brainstorming with technical background lessons in 10
minutes in a relaxed atmosphere.

This will not result in a perfect threat modelled project. But it raises
awareness and will reduce things in the long term.

It also adds some fun aspects into the whole security topic.

I would be happy to be able to brag about intentionally inventing it. But this
"just happened" and I observed this pattern around me.

This is not a replacement for a properly prepared security assessment.

%% ## OWASP Embedded Application Security Project
%% https://www.owasp.org/index.php/OWASP_Embedded_Application_Security
%% https://michenriksen.com/blog/drawio-for-threat-modeling/
