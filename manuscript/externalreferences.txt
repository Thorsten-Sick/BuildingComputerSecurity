# External references and resources

### Hacking Tamagotchis {#reference-tamagotchi}

Natalie Silvanovich on hacking Tamagotchis. Videos from CCC conferences

[Many Tamagotchis Were Harmed in the Making of this Presentation](https://media.ccc.de/v/29c3-5088-en-many_tamagotchis_were_harmed_in_the_making_of_this_presentation_h264)

[Even More Tamagotchis Were Harmed in the Making of this Presentation](https://media.ccc.de/v/30C3_-_5279_-_en_-_saal_1_-_201312291715_-_even_more_tamagotchis_were_harmed_in_the_making_of_this_presentation_-_natalie_silvanovich)

### Disassembler tools {#reference-disassembler-tools}

* [IDA](https://www.hex-rays.com/products/ida/index.shtml), paid and free test version. For Mac/Win/Linux
* [Hopper](https://www.hopperapp.com/), Mac/Linux. Test version available
* [Radare2](http://radare.org/r/), Mac/Windows/Linux/...

### Book: Practical Internet of Things Security {#reference-book-practical-iot-security}

Practical Internet of Things Security by Drew Van Duren, Brian Russell

A very methodical book covering

* Threat modelling
* Design
* Life cycle
* Basic Cryptography
* Authentication/Authorization
* Compliance monitoring
* IoT Incidence Response

A good overview.

Potential improvement: Go deeper into details and specific technology.
For example: Crypto chapter is a good start but really using crypto will
require more books to be read. Says the one writing a
"security overview book"...I know....

### Book: "Test driven development for embedded C" {#reference-book-tdd-4-embedded-c}

Test Driven Development for Embedded C by James W. Grenning

A pragmatic and step-by-step approach how to develop for embedded systems in C
and still benefit from unit tests.

This book will improve your software quality and security.



### Security Engineering {#reference-book-security-engineering}

Security Engineering by	Ross J. Anderson

A book more focused on Designers/Architects. Lots of chapters with specific topics.
Some may not be relevant for you. But as the book is very good you either soldier on or you
cherry pick interesting chapters. No matter what of those you are doing: Read it.


%% TODO: The car hacker's handbook



### The Browser Hacker's Handbook {#reference-book-browser-hacker-handbook}

The Browser Hacker's Handbook by Michele Orru , Christian Frichot , Wade Alcorn.
Essential knowledge how to hack and secure a browser. Lots of focus on Beef
technology.


%% TODO: Windows Internals

%% TODO: Secure C and C++ Development


%% TODO: Add Viega book

### Cuckoo Sandbox {#reference-cuckoo-sandbox}

[Cuckoo Sandbox](https://cuckoosandbox.org/) is a behaviour analysis tool for
malware. Malware is executed in a simulated environment and all the behaviour
is monitored.

Try it online on [malwr.com](https://malwr.com/)


%% TODO: Add volatility, link to author

%% TODO: Add Beef, link to browser hacker book

### Book: IoT Penetration Cookbook {#reference-book-iot-penetration-cookbook}

IoT Penetration Cookbook by Aaron Guzman, Aditya Gupta

Wide spectrum of offensive technologies. Good to create a checklist what to protect. Be prepared to read more in-depth books for the technologies you are interested in.

## The human mind

### Book: Pragmatic Thinking and Learning {#reference-book-pragmatic-thinking-and-learning}

Pragmatic Thinking and Learning, by Andy Hunt

Explains your most important tool as a computer expert: Your brain. How to use
it, how to learn. A very important book for me. Written for the engineer.

### Driving Technical Change {#reference-book-driving-technical-change}

Driving Technical Change, by Terrence Ryan

A book explaining how to introduce new technologies in a team or company. Simple
to read but with very essential tricks for the tech guy how to get mental
boulders blocking change out of the way.

### Anti Patterns {#reference-book-anti-patterns}

Anti Patterns, Refactoring Software, Architectures, and Projects in Crisis by William H. Brown Raphael C. Malveau, Hays W. "Skip" McCormick III, Thomas J. Mowbray

A book showing typical anti-patterns that just happen in larger (software)
projects. Your project will also suffer from some of those. Read this to
understand those patterns and learn how to eliminate them.



## Bluetooth LE {#reference-collection-btle}

### Book: Make: Bluetooth {#reference-book-make-bluetooth}

Make: Bluetooth, by Don Coleman; Sandeep Mistry; Alasdair Allan

A Bluetooth LE book. For people who prefer to learn with their hands. Lots of Arduino and NodeJS based projects.

Not mentioning security. But a good way to get you started.


### Book: IoT Projects with Bluetooth Low Energy {#reference-book-iot-projects-with-bluetooth-low-energy}

IoT Projects with Bluetooth Low Energy by Madhur Bhargava. Still a hands-on
book. But the *Make: Bluetooth* is simpler. This one has more theory.
It also covers BTLE 5.0


### Book: Building Bluetooth Low Energy Systems {#reference-book-building-btle-systems}

Building Bluetooth Low Energy Systems, by Muhammad Usama bin Aftab

%% TODO: More content

### Book: Getting Started with Bluetooth Low Energy {#reference-book-getting-started-with-btle}

Getting Started with Bluetooth Low Energy by Robert Davidson, Akiba, Carles Cuf√≠, Kevin Townsend

%% TODO: Fix name encoding

From protocol basics and background to different hardware platforms and tools. A solid road to implement the first BTLE projects.

Also contains tools and iOS/Android howtos.

### Bleah {#reference-bleah}

Bleah is a Bluetooth Low Energy hacking tool. It requires Bluepy.

https://github.com/IanHarvey/bluepy
https://github.com/evilsocket/bleah

To install bluepy:

{lang="bash"}
    pip install bluepy

How to use: See at the [BTLE](#chapter-btle) chapter.

### Woot13 presentation on BTLE hacking (especially sniffing) {#reference-presentation-btle-sniffing}

by Mike Ryan

https://www.usenix.org/conference/woot13/workshop-program/presentation/Ryan

tags:

* Ubertooth
* wireshark
* pcap
* sniffing
* BTLE key exchange protocol
* crackle

### SHA2017 presentation on BTLE hacking "hack-a-ble" {#reference-presentation-hack-a-ble}

Very dense talk on Bluetooth LE security.

https://media.ccc.de/v/SHA2017-230-hack-a-ble

### Lockpicking in the IoT {#reference-presentation-lockpicking-in-the-iot}

https://media.ccc.de/v/33c3-8019-lockpicking_in_the_iot

Very specific for BLE locks. Some mentioning of mitmproxy and ble sniffers.
Relevant if you want to create IoT locks.

### With low energy comes low security {#reference-presentation-with-low-energy-comes-low-security}

https://www.usenix.org/conference/woot13/workshop-program/presentation/ryan

* Lots about the lower physical layers
* Tools
  * Ubertooth
  * Wireshark
  * PCAP

Take aways:

* BLE key exchange protocol weak
  * but AES-CCM is good
* Attackers can enforce re-pairing to get a new key exchange
* *crackle* needs less than a second
  * But needs pairing sniffed to crack


## Testing projects

### Fuzzgoat {#reference-fuzzgoat}

Fuzzgoat is a vulnerable C program: https://github.com/fuzzstati0n/fuzzgoat

## Getting used to security

A list of easy to read books (even for non-tech people) that can be used to
introduce people into the shady world of security

### Ghost in The Wires {#reference-book-ghost-in-the-wires}

Ghost in The Wires by Kevin Mitnick. Life story from Kevin Mitnick. Famous
hacker and pen tester. Many described exploits are on the social engineering
level. Simple to read. Most of the technology described here does not exist
anymore.

### Beyond Fear {#reference-book-beyond-fear}

Beyond Fear by Bruce Schneier is a book where a computer security guy analyses
common physical world security practices like airport security. Teaches thinking
and critical thinking about security and security promises. Can be read by
non-technical people.

### Future Crimes {#reference-book-future-crimes}

Future Crimes by Marc Goodman is a book covering the experience of a cybercrime
police officer. Every chapter is a noteworthy and often entertaining example of
a real crime. Entertaining and does not require technical knowledge. Good for
training critical thinking and security thinking.

%% TODO: http://opensecuritytraining.info/Training.html

%% TODO: CTF: https://apsdehal.in/awesome-ctf/

%% https://google-gruyere.appspot.com/

%% Vulnerable Web Applications:  https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project.


%% Hardsploit: https://hardsploit.io/

%% Phishtank https://www.phishtank.com/
%% stopbadware.org

%% https://www.safaribooksonline.com/library/view/beginning-software-engineering/9781118969175/

%% https://www.safaribooksonline.com/library/view/managing-the-unmanageable/9780132981187/

%% https://www.safaribooksonline.com/library/view/agile-estimating-and/9780137126347/
